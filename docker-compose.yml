networks:
  default:
    internal: false
  services:
    internal: true
  kong:
    internal: true

services:
#  gateway-db:
#    restart: unless-stopped
#    image: postgres:16.3-alpine
#    networks:
#      - kong
#    environment:
#      POSTGRES_USER: kong
#      POSTGRES_DB: kong
#      POSTGRES_PASSWORD: kongpass
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#
#  gateway-db-migrate:
#    image: kong:3
#    networks:
#      - kong
#    command: kong migrations bootstrap
#    environment:
#      KONG_DATABASE: postgres
#      KONG_PG_HOST: gateway-db
#      KONG_PG_USER: kong
#      KONG_PG_PASSWORD: kongpass
#    depends_on:
#      gateway-db:
#        condition: service_healthy
#
#  gateway:
#    image: kong:3
#    restart: unless-stopped
#    networks:
#      - kong
#      - default
#      - services
#    environment:
#      KONG_DATABASE: postgres
#      KONG_PG_HOST: gateway-db
#      KONG_PG_USER: kong
#      KONG_PG_PASSWORD: kongpass
#      KONG_PROXY_ACCESS_LOG: /dev/stdout
#      KONG_ADMIN_ACCESS_LOG: /dev/stdout
#      KONG_PROXY_ERROR_LOG: /dev/stdout
#      KONG_ADMIN_ERROR_LOG: /dev/stdout
#      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
#      KONG_ADMIN_GUI_URL: http://localhost:8002
#    ports:
#      - "8000:8000"
#      - "8443:8443"
#      - "127.0.0.1:8001:8001"
#      - "127.0.0.1:8444:8444"
#      - "127.0.0.1:8002:8002"
#    depends_on:
#      gateway-db:
#        condition: service_healthy
#      gateway-db-migrate:
#        condition: service_completed_successfully

  gateway-1:
    image: gateway
    networks:
      - default
      - services
    build:
      context: .
      dockerfile: src/Gateway/Dockerfile
